# Generated by Django 4.2.24 on 2025-09-10 03:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0002_class_head_teacher'),
        ('courses', '0002_alter_course_code'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teachers', '0003_teachingassignment_course'),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '教室',
                'verbose_name_plural': '教室',
                'db_table': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('term', models.CharField(max_length=16)),
                ('day_of_week', models.PositiveSmallIntegerField()),
                ('start_time', models.CharField(max_length=5)),
                ('end_time', models.CharField(max_length=5)),
                ('start_period', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_period', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('week_type', models.CharField(choices=[('odd', 'odd'), ('even', 'even'), ('all', 'all')], default='all', max_length=8)),
                ('weeks', models.CharField(blank=True, default='', max_length=64)),
                ('course_name', models.CharField(max_length=128)),
                ('teacher_name', models.CharField(blank=True, default='', max_length=64)),
                ('class_name', models.CharField(blank=True, default='', max_length=64)),
                ('room_name', models.CharField(blank=True, default='', max_length=64)),
                ('remark', models.TextField(blank=True, default='')),
                ('class_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.class')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='timetable.room')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='teachers.teacher')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '课程表-课次',
                'verbose_name_plural': '课程表-课次',
                'db_table': 'lessons',
                'indexes': [models.Index(fields=['term', 'day_of_week'], name='lessons_term_fa20c4_idx')],
            },
        ),
    ]
